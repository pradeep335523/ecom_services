server:
  port: 8081
spring:
  kafka:
    template:
      default-topic: "notificationTopic"
    producer:
      properties:
        spring:
          json:
            add:
              type:
                headers: false
            type:
              mapping: "event:com.example.order.event.OrderPlaceEvent"


      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers:
        - http://localhost:9092
  application:
    name: order-service
  jpa:
    hibernate:
      ddl-auto: "update"
    properties:
        hibernate:
          dialect: "org.hibernate.dialect.MySQLDialect"
  datasource:
    url: "jdbc:mysql://${MYSQL_HOST:localhost}:3306/order-service"
    username: "user"
    password: "password"
    driver-class-name: "com.mysql.cj.jdbc.Driver"

eureka:
      client:
        serviceUrl:
          defaultZone: ${EUREKA_URI:http://localhost:8080/eureka}
app:
  property:
    inventory:
      service-url: "http://inventory-service/api/v1/inventory/list"
management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: ALWAYS
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
         - "*"

 ## Resilience4j Properties ------
resilience4j:
  retry:
    instances:
      inventory:
        maxAttempts: 3
  timelimiter:
    instances:
      inventory:
        timeoutDuration: 3s
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true

